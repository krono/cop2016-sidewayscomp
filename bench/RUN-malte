#!/bin/bash

set -e

PY_DEFAULT=${PY:-python}
FILE_DEFAULT="contextpy/contextpyBenchmark.py"

# TRACE_LIMIT=15000
TRACE_LIMIT=64000

if [ "Darwin" = "$(uname)" ]; then
    OS=osx
else
    OS=win10
    # for now
fi

function _run {
    PY="${1:-$PY_DEFAULT}"; shift || true
    FILE="${1:-$FILE_DEFAULT}"; shift || true
    env $PY "$FILE" "$@" 2>/dev/null
}

function run_pypy {
    echo "run pypy $@"
    local pypypromote=~/dev/pypy/pypy/pypy-c
    local py="PYPY_NO_PROMOTE=1 $pypypromote --jit trace_limit=$TRACE_LIMIT"
    _run "$py" "$@" >> malte-contextpy-$OS-pypy.tsv
}

function run_pypypromote {
    echo "run pypypromote $@"
    local pypypromote=~/dev/pypy/pypy/pypy-c
    local py="PYPY_NO_PROMOTE=0 $pypypromote --jit trace_limit=$TRACE_LIMIT"
    _run "$py" "$@" >> malte-contextpy-$OS-pypypromote.tsv
}


function run_python {
    echo "run python $@"
    _run python "$@" >> malte-contextpy-$OS-python.tsv
}

function all_benches {
    local it="$1"; shift;
    local do_it="run_$it";
    printf "name	ops	time	ops/time\n" > malte-contextpy-$OS-$it.tsv

    bench="runtime"
    # for kind in "standard" "nolayer" "layer"; do
    for kind in "nolayer" "layer"; do
        # contextL only does these, too
        for num_layers in {0..10}; do 
            # ContextJS only does 0..10
            $do_it $FILE_DEFAULT $bench $num_layers $kind
        done
    done

    bench="activation"
    # for kind in "flat" "nested"; do
        kind="nested" # contextL only does these, too
        for num_layers in {0..5}; do 
            $do_it $FILE_DEFAULT $bench $num_layers $kind
        done
    # done
}

if [ ! -z "$1" ]; then
    all_benches $1
else
    all_benches pypypromote
    all_benches pypy
    all_benches python
fi
